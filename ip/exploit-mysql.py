import os
import mysql.connector
from contextlib import closing
import json

def search_exploit():
	try:
		mydb = mysql.connector.connect(
		  host="localhost",
		  user="corpus",
		  password="toor",
		  database="corpus"
		)

		with closing( mydb.cursor(prepared=True) ) as mycursor:
			mycursor.execute("SELECT macA FROM macAdd;")
			records = mycursor.fetchall()

			for macToSearch in records:

				macRequest = "curl https://api.macvendors.com/" + str(macToSearch[0].decode('utf-8')) + " 2>/dev/null"
				nomModel = os.popen(macRequest).read()
				nomModel = nomModel.replace('"', '')
				nomModel = nomModel.replace('{', '')
				nomModel = nomModel.replace('}', '')
				nomModel = nomModel.replace(':', ' ')
				nomModel = nomModel.replace(',', ' ')
				nomModel = nomModel.replace('.', '')
				nomModel = nomModel.split(' ')
				# print(macRequest)
				# print(nomModel)

				if nomModel[0] != "errors":
					for item in nomModel:
						
						search_model = "searchsploit " + str(item) + " -t"
						result_model = os.popen(search_model).read()



						if result_model != "Exploits: No Results\nShellcodes: No Results\n":
							search_model = "searchsploit " + item + " -j > /opt/projetmaster-master/ressource/json/" + item
							print(item)
							os.system(search_model)

							with open('/opt/projetmaster-master/ressource/json/' + item) as json_model:
								data_model = json.load(json_model)
							
								for vuln in data_model['RESULTS_EXPLOIT']:
									with open('/opt/projetmaster-master/ressource/vuln/' + item + '_exploit', 'a') as vuln_model:
										vuln_model.write(str(vuln['Date']) + " " + str(vuln['Title']) + "\n")
								for vuln in data_model['RESULTS_SHELLCODE']:
									with open('/opt/projetmaster-master/ressource/vuln/' + item + '_shellcode', 'a') as vuln_model:
										vuln_model.write(str(vuln['Date']) + " " + str(vuln['Title']) + "\n")

	except mysql.connector.errors.ProgrammingError:
		return False
	finally:
		mydb.close()
search_exploit()
